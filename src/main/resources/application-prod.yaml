spring:
  spotify:
    tracks-uri: https://api.spotify.com/v1/me/top/tracks
    artists-uri: https://api.spotify.com/v1/me/top/artists
    short-time: short_term
    medium-time: medium_term
    track-count: 35
    artist-count: 50
    scope: user-top-read

  application:
    name: VibeMatch

  rabbitmq:
    factory:
      cloud-host: rattlesnake.rmq.cloudamqp.com
      port: 5671
      username: ykbkqtqi
      v-host: ykbkqtqi
      password: ${RABBITMQ_PASSWORD}
    prop:
      sync:
        exchange-name: sync-exchange
        queue-name: sync-queue
        routing-key: sync-key
        ttl: 30000


  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  cache:
    type: redis
    token-time-in-hours: 1
    profile-time-in-hours: 1


  security:
    oauth2:
      client:
        registration:
          spotify:
            client-id: ${SPOTIFY_CLIENT_ID}
            client-secret: ${SPOTIFY_CLIENT_SECRET}
            redirect-uri: "https://vibematch-od18.onrender.com/auth/callback"
            scope: user-top-read,user-read-email,user-read-private
            authorization-grant-type: authorization_code
        provider:
          spotify:
            authorization-uri: https://accounts.spotify.com/authorize
            token-uri: https://accounts.spotify.com/api/token
            user-info-uri: https://api.spotify.com/v1/me
            api-uri: https://accounts.spotify.com/api/v1
            user-name-attribute: me


  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 15        # Max connections in pool
      minimum-idle: 3              # Min idle connections kept alive
      connection-timeout: 30000    # Wait 30s for connection from pool
      idle-timeout: 600000         # Close idle connections after 10 minutes
      max-lifetime: 1800000        # Kill connections after 30 minutes
      leak-detection-threshold: 60000

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        hbm2ddl:
          halt_on_error: false
        use_sql_comments: true
    show-sql: true

  logging:
    level:
      org.hibernate.SQL: WARN
      org.hibernate.tool.schema: WARN
      org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl: WARN
      root: INFO

jwt:
  secret: ${JWT_SECRET}
  expiration: 3600

scheduled:
  refresh-user-data: 7200000
  threshold-in-hours: 24
  compatibility-cron: 0 0 3 * * *

cookies:
  secure: true
  http-only: true
  max-age: 3600


